services:
  rent-vehicles-api:
    image: rent-vehicles-api:latest
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M
    hostname: rent-vehicles-api
    expose:
      - "80"
    build:
        context: .
        dockerfile: ./src/Rent.Vehicles.Api/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    healthcheck:
      test: curl --fail http://localhost/health/ready || exit 1
      interval: 10s
      retries: 5
      start_period: 2s
      timeout: 10s
  
  rent-vehicles-database:
    image: rent-vehicles-database:latest
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M
    hostname: rent-vehicles-database
    build:
        context: .
        dockerfile: ./src/Rent.Vehicles.Database/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
  
  rent-vehicles-consumer-commands:
    image: rent-vehicles-consumer-commands:latest
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M
    command: ["-t", "Command"]
    hostname: rent-vehicles-consumer-commands
    expose:
      - "80"
    build:
        context: .
        dockerfile: ./src/Rent.Vehicles.Consumers/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    healthcheck:
      test: curl --fail http://localhost/health/ready || exit 1
      interval: 10s
      retries: 5
      start_period: 2s
      timeout: 10s

  rent-vehicles-consumer-events:
    image: rent-vehicles-consumer-events:latest
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M
    command: ["-t", "Event", "-e", "Event, EventProjection"]
    hostname: rent-vehicles-consumer-events
    expose:
      - "80"
    build:
        context: .
        dockerfile: ./src/Rent.Vehicles.Consumers/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    healthcheck:
      test: curl --fail http://localhost/health/ready || exit 1
      interval: 10s
      retries: 5
      start_period: 2s
      timeout: 10s

  rent-vehicles-consumer-events-events-projection:
    image: rent-vehicles-consumer-events-events-projection:latest
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.15'
          memory: 256M
    command: ["-t", "Event", "-i", "Event, EventProjection"]
    hostname: rent-vehicles-consumer-events-events-projection
    expose:
      - "80"
    build:
        context: .
        dockerfile: ./src/Rent.Vehicles.Consumers/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    healthcheck:
      test: curl --fail http://localhost/health/ready || exit 1
      interval: 10s
      retries: 5
      start_period: 2s
      timeout: 10s
  

  nginx:
    image: nginx:latest
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1024M
        reservations:
          cpus: '0.25'
          memory: 512M
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 4000:4000
      - 4001:4001
    depends_on:
      - rent-vehicles-api

networks:
  default:
    driver: bridge
    name: rent-vehicles-sln

volumes:
  database-postgres-volume:
    name: database-postgres-volume
  
  database-mongo-volume:
    name: database-mongo-volume